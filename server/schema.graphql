type Query {
  _: String
}

type Mutation {
  _: String
  createUser(input: UserInput!): UserReference!
  authenticate(credential: Credential!): AuthResult!
  refreshToken(refreshToken: RefreshTokenInput!): AuthResult!
}

type Subscription {
  _: String
}

input RefreshTokenInput {
  token: String!
}

input Credential {
  userName: String!
  password: String!
}

input UserInput {
  firstName: String!
  lastName: String!
  email: String
  userName: String!
  enabled: Boolean!
}

type AuthResult {
  accessToken: String!
  expiresInSec: Int!
  refreshToken: String!
  refreshExpiresInSec: Int!
  tokenType: String!
}

type UserReference {
  id: String!
  name: String!
}